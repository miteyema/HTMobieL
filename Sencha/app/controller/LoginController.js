/*
 * File: app/controller/LoginController.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Expense.controller.LoginController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            login: 'loginpanel'
        },

        control: {
            "button[action=login]": {
                tap: 'doLogin'
            }, 'button[action=logout]' : {
                tap : 'doLogout'
            }
        }
    },

    doLogin: function(button, e, options) {
        //Reset red borders
        Ext.getCmp('emailLogin').removeCls('x-field-custom-error');
        Ext.getCmp('password').removeCls('x-field-custom-error');

        var fields= this.getLogin().getValues();
        if(fields.emailLogin == '' || fields.password == ''){
        	var message = '';
        	if(fields.emailLogin == ''){
				message = message + 'Email must be present <br>';
                Ext.getCmp('emailLogin').addCls('x-field-custom-error');
        	} if(fields.password == ''){
        		message = message + 'Password must be present <br>';
				Ext.getCmp('password').addCls('x-field-custom-error');;
        	}
			Ext.Msg.show({
				   title: 'Error',
				   message: message,
				   width: 300,
				   buttons: Ext.MessageBox.OK
			});
        }
        else{
            Ext.Ajax.request({
                url : Expense.app.getBaseURL() + '/resources/userService/login',
                method : 'POST',
                //http://stackoverflow.com/questions/10830334/ext-ajax-request-sending-options-request-cross-domain-when-jquery-ajax-sends-get
                useDefaultXhrHeader: false,
                params: {
                    email: fields.emailLogin,
                    password: fields.password
                },
                success : function(response, opts) {
                    if(response.responseText.length <= 0){
                        /*Ext.device.Notification.vibrate();
                        Ext.device.Notification.show({
                            title: 'Login Failed',
                            message: 'Given email and password not found.'
                        });*/ //TODO nativa app
                        Ext.Msg.show({
                               title: 'Error',
                               message: 'Login could not be found!',
                               width: 300,
                               buttons: Ext.MessageBox.OK
                        });
                    }
                    else{
                        Expense.app.setToken(response.responseText);
                        var employeeStore = Ext.getStore('employeestore');
                        employeeStore.getProxy().setExtraParams({
                            token: response.responseText
                        });
                        employeeStore.load();
                    }
                },
                failure: function(response, opts) {
                    console.log('server-side failure with status code ' + response.status);
                }
            });
        }
    },

    doLogout : function(button, e, options) {
        Ext.Ajax.request({
            url : Expense.app.getBaseURL() + '/resources/userService/logout',
            method : 'POST',
            useDefaultXhrHeader : false, // http://stackoverflow.com/questions/10830334/ext-ajax-request-sending-options-request-cross-domain-when-jquery-ajax-sends-get
            params : {
                token : Expense.app.token
            },
            callback : function(options, success,response) {
                Ext.Viewport.setActiveItem(Ext.getCmp('loginpanel'));
            }
        });
    },

});